{"version":3,"sources":["components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","useState","active","setLine","change","setColor","onClick","preValue","style","textDecoration","text","onMouseOver","onMouseOut","color","onChecked","id","class","App","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","className","onChange","event","newValue","target","value","console","log","type","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"8JA4CeA,MA1Cf,SAAkBC,GAAQ,IAAD,EACGC,oBAAS,GADZ,mBAChBC,EADgB,KACRC,EADQ,OAEIF,oBAAS,GAFb,mBAEhBG,EAFgB,KAERC,EAFQ,KAgBvB,OACE,6BAKE,wBACEC,QAnBN,WACEH,GAAQ,SAAAI,GACN,OAAQA,MAkBNC,MAAO,CAAEC,eAAgBP,EAAS,eAAiB,SAElDF,EAAMU,KACP,0BACEC,YAlBR,WACEN,GAAS,IAkBHO,WAhBR,WACEP,GAAS,IAgBHG,MAAO,CAAEK,MAAOT,EAAS,MAAQ,SACjCE,QAAS,WACPN,EAAMc,UAAUd,EAAMe,MAGxB,uBAAGC,MAAM,0BCkBJC,MApDf,WAAgB,IAAD,EACqBhB,mBAAS,IAD9B,mBACNiB,EADM,KACKC,EADL,OAEalB,mBAAS,IAFtB,mBAENmB,EAFM,KAECC,EAFD,KAiBb,SAASC,EAAWP,GAClBM,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUX,QAKvB,OACE,yBAAKY,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,SA3Bb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9Bb,EAAaW,GACbG,QAAQC,IAAIhB,IAwBuBiB,KAAK,OAAOH,MAAOd,IAClD,4BAAQZ,QAtBd,WACEe,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAExBC,EAAa,MAmBP,uCAGJ,6BACE,4BACGC,EAAMgB,KAAI,SAACC,EAAUX,GAAX,OACT,kBAAC,EAAD,CACEX,GAAIW,EACJY,IAAKZ,EACLhB,KAAM2B,EACNvB,UAAWQ,WC1CzBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2d71f475.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDoItem(props) {\n  const [active, setLine] = useState(false);\n  const [change, setColor] = useState(false);\n\n  function crossLine() {\n    setLine(preValue => {\n      return !preValue;\n    });\n  }\n\n  function Hover() {\n    setColor(true);\n  }\n  function Nonhover() {\n    setColor(false);\n  }\n  return (\n    <div\n    // onClick={() => {\n    //   props.onChecked(props.id);\n    // }}\n    >\n      <li\n        onClick={crossLine}\n        style={{ textDecoration: active ? \"line-through\" : \"none\" }}\n      >\n        {props.text}\n        <span\n          onMouseOver={Hover}\n          onMouseOut={Nonhover}\n          style={{ color: change ? \"red\" : \"black\" }}\n          onClick={() => {\n            props.onChecked(props.id);\n          }}\n        >\n          <i class=\"fa fa-trash-o bin\" />\n        </span>\n      </li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n    console.log(inputText);\n  }\n\n  function addItem() {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              id={index}\n              key={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n"],"sourceRoot":""}